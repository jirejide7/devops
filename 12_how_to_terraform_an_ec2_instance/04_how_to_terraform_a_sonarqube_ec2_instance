# @command line on Linux instance
cd ~
mkdir $TERRAFORM_SONARQUBE
cd $TERRAFORM_SONARQUBE
ssh-keygen -f $TERRAFORM_SONARQUBE_KEY

terraform init

nano aws.tf
provider "aws" {
    access_key="paste access key from access key file"
    secret_key="paste secret key from access key file"
    region="us-east-2"
}
ctrl+x
y
Enter
terraform validate

nano create_sonarqube_ec2.tf

resource "aws_key_pair" "$TERRAFORM_SONARQUBE_KEY" {
	key_name="terraform_key"
	public_key=file("${path.root}/$TERRAFORM_SONARQUBE_KEY.pub")
}

resource "aws_security_group" "sonarqube_security_group" {
	name="sonarqube_security_group"
	description="sonarqube security group"
	
	ingress {
		from_port=9000
		to_port=9000
		protocol="tcp"
		cidr_blocks=["0.0.0.0/0"]
	}

	ingress {
		from_port=22
		to_port=22
		protocol="tcp"
		cidr_blocks=["$MY_IPADDRESS/32"]
	}

	egress {
		from_port=0
		to_port=65535
		protocol="tcp"
		cidr_blocks=["0.0.0.0/0"]
	}

	tags={
		name="sonarqube_security_group"
	}
}


resource "aws_instance" "TerraformedSonarQubeEC2" {
	ami="ami-0fc20dd1da406780b"
	count=1
	key_name="terraform_key"
	instance_type="t2.micro"
	security_groups=["sonarqube_security_group"]
	tags={
		name="sonarqube_instance"
	}
}

ctrl+x
y
Enter

terraform validate
terraform plan
terraform apply
yes
